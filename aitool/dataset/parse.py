import tqdm
from pycocotools.coco import COCO
import pycocotools.mask as maskUtils

import mmcv
import aitool


class PklParser():
    """parse the pkl file (generated by mmdetection)
    """
    def __init__(self,
                 pkl_file,
                 ann_file):
        if isinstance(pkl_file, str):
            results = mmcv.load(pkl_file)
        elif isinstance(pkl_file, (list, tuple)):
            results = pkl_file
        else:
            raise TypeError(f'do not support the pkl file type: {type(pkl_file)}')

        coco = COCO(ann_file)
        img_ids = coco.get_img_ids()

        print("begin to convert pkl file to specific format")
        self.objects = dict()
        for idx, img_id in tqdm.tqdm(enumerate(img_ids)):
            info = coco.load_imgs([img_id])[0]
            img_name = aitool.get_basename(info['file_name'])
            result = results[idx]

            self.objects[img_name] = self._convert_items(result)

    def _convert_items(self, result):
        """convert the result (single image) in pkl file to specific format (default: Mask R-CNN, bbox + mask) 

        Args:
            result (tuple): detection result of single image

        Return:
            list: converted objects
        """
        objects = []


        return objects


    def __call__(self, image_fn):
        pass